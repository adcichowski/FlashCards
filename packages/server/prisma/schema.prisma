generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Card {
  id        Int     @id(map: "cards_pkey") @default(autoincrement())
  subjectId Int
  question  String  @db.VarChar(255)
  answer    String  @db.VarChar(255)
  userId    Int
  shapeId   Int?
  Shape     Shape?  @relation(fields: [shapeId], references: [shapeId], onDelete: NoAction, onUpdate: NoAction, map: "card_shape_shapeid_fk")
  Subject   Subject @relation(fields: [subjectId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cards_subject_subject_id_fk")
  User      User    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "card_user_id_fk")
  Rate      Rate[]
}

model Rate {
  userId Int
  cardId Int
  rate   Int?
  Card   Card @relation(fields: [cardId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "rate_card_card_id_fkey")
  User   User @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "rate_card_user_id_fkey")

  @@id([userId, cardId], map: "rate_card_pkey")
}

model Subject {
  id      Int     @id(map: "technologies_pk") @default(autoincrement())
  name    String? @db.VarChar(22)
  color   String? @db.VarChar(6)
  section String? @db.VarChar(32)
  Card    Card[]
}

model User {
  id        Int       @id(map: "users_pkey") @default(autoincrement())
  userName  String    @db.VarChar(50)
  password  String    @db.VarChar(50)
  email     String    @unique(map: "users_email_key") @db.VarChar(60)
  createdOn DateTime  @default(now()) @db.Timestamp(6)
  lastLogin DateTime? @db.Timestamp(6)
  Card      Card[]
  Rate      Rate[]
}

model Shape {
  shapeId Int    @id(map: "shape_pk")
  Card    Card[]
}
