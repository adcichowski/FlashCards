generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Card {
  id           String       @id(map: "card_pk") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  question     String?      @db.VarChar(255)
  answer       String?      @db.VarChar(255)
  difficulties difficulties
  subjectId    String       @db.Uuid
  userId       String       @db.Uuid
  shapeId      String       @db.Uuid
  Shape        Shape        @relation(fields: [shapeId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "card_shape_id_fk")
  Subject      Subject      @relation(fields: [subjectId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "card_subject_id_fk")
  User         User         @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cards_users_id_fk")
  Rate         Rate[]
}

model Rate {
  rate   Int
  id     String @id(map: "rate_pk") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId String @db.Uuid
  cardId String @db.Uuid
  Card   Card   @relation(fields: [cardId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "rate_card_id_fk")
  User   User   @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "rate_users_id_fk")
}

model Section {
  name      String  @db.VarChar(16)
  id        String  @id(map: "section_pk") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  subjectId String  @db.Uuid
  Subject   Subject @relation(fields: [subjectId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "section_subject_id_fk")
}

model Shape {
  id    String @id(map: "shape_pk") @unique(map: "shape_id_uindex") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  shape Int    @unique(map: "shape_shape_uindex")
  Card  Card[]
}

model Subject {
  id      String    @id(map: "subject_pk") @unique(map: "subject_subject_uindex") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  section String    @db.VarChar(16)
  Card    Card[]
  Section Section[]
}

model User {
  id       String @id(map: "users_pk") @unique(map: "users_id_uindex") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  username String @unique(map: "users_username_uindex") @db.VarChar(32)
  email    String @unique(map: "users_email_uindex") @db.VarChar(32)
  password String @unique(map: "users_password_uindex") @db.VarChar(60)
  Card     Card[]
  Rate     Rate[]
}

enum difficulties {
  Junior
  Mid
  Senior
}
