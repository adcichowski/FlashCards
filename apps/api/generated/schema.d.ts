/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  readonly "/sessions": {
    /** @description Register user to database. */
    readonly post: {
      readonly responses: {
        /** @description App is up and running */
        readonly 200: never;
        /** @description User is exist in database */
        readonly 401: never;
      };
    };
    /** @description Register user to database. */
    readonly delete: {
      readonly responses: {
        /** @description App is up and running */
        readonly 200: never;
        /** @description User is exist in database */
        readonly 401: never;
      };
    };
  };
  readonly "/users": {
    /** @description Register user to database. */
    readonly post: {
      readonly responses: {
        /** @description App is up and running */
        readonly 200: never;
        /** @description User is exist in database */
        readonly 401: never;
      };
    };
  };
  readonly "/cards": {
    /**
     * Get cards
     * @description Recive cards from database
     */
    readonly get: {
      readonly parameters: {
        readonly query?: {
          /** @description Card subject that need to be considered for filter */
          readonly subject?: string;
        };
      };
      readonly responses: {
        /** @description App is up and running */
        readonly 200: never;
        /** @description Invalid Subject supplied */
        readonly 400: never;
        /** @description Cards not found */
        readonly 404: never;
      };
    };
    /** Create card */
    readonly post: {};
  };
  readonly "/cards/{cardId}": {
    /**
     * Find card by ID
     * @description Return a single card
     */
    readonly get: {
      readonly parameters: {
        readonly path: {
          /**
           * Format: int64
           * @description ID of card to return
           */
          readonly cardId: string;
        };
      };
      readonly responses: {
        /** @description Return list cards */
        readonly 200: never;
        /** @description Invalid ID supplied */
        readonly 400: never;
        /** @description Card not found */
        readonly 404: never;
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  readonly schemas: {
    readonly GetCard: {
      readonly question?: string;
      readonly answer?: string;
      /** @default 1 */
      readonly shapeId?: number;
      readonly createdBy?: string;
      readonly subject?: string;
      readonly section?: string;
      readonly rates?: {
        readonly overall?: number;
        readonly list?: readonly {
          readonly username?: string;
          readonly rate?: number;
        }[];
      };
    };
    readonly Register: {
      readonly email: string;
      readonly password: string;
      readonly username: string;
    };
    readonly Login: {
      readonly email: string;
      readonly password: string;
    };
    readonly CreateCardInput: {
      readonly question: string;
      readonly answer: string;
      /** @default 1 */
      readonly shapeId: number;
      readonly userId: number;
      readonly subjectId: number;
      readonly rate: {
        readonly userId?: number;
        readonly rate?: number;
      };
    };
    readonly CreateRateInput: {
      readonly rate: number;
      readonly userId: number;
      readonly cardId: number;
    };
  };
  readonly responses: never;
  readonly parameters: never;
  readonly requestBodies: never;
  readonly headers: never;
  readonly pathItems: never;
}

export type external = Record<string, never>;

export type operations = Record<string, never>;
